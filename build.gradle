plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
	id 'org.sonarqube' version '4.2.1.3168'
}

group = 'br.com.lsilva.portfolio'
version = '0.0.2-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave:1.1.5'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave:2.16.4'
	implementation 'com.github.loki4j:loki-logback-appender:1.4.1'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jacoco {
    toolVersion = '0.8.9'
}

test {
	useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
    }
	afterEvaluate {
		classDirectories.from = files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
				'**/br/com/lsilva/portfolio/observability/model**'
			])
		})
	}
}

sonarqube {
  properties {
    property 'sonar.projectKey', 'observability'
    property 'sonar.projectName', 'observability'
	property 'sonar.token', 'sqp_1dea1189416ed1174fe59fd8ce0aeb2c9d700618'
  }
}